var assert = require('assert')
var is = require('../is-too')

var fn = function(){}

describe('helpers', function(){

  it('toInteger', function(){
    assert.equal(null, is.toInteger(fn))
    assert.equal(null, is.toInteger(new Date()))
    assert.equal(null, is.toInteger(undefined))
    assert.equal(null, is.toInteger(NaN))
    assert.equal(null, is.toInteger(null))
    assert.equal(null, is.toInteger(true))
    assert.equal(null, is.toInteger(false))
    assert.equal(null, is.toInteger({}))
    assert.equal(null, is.toInteger([]))
    assert.equal(null, is.toInteger(""))
    assert.equal(null, is.toInteger("   "))
    assert.equal(null, is.toInteger("asdf"))
    assert.equal(1,    is.toInteger("1.23"))
    assert.equal(-42,  is.toInteger("-42"))
    assert.equal(-1,   is.toInteger("-1"))
    assert.equal(0,    is.toInteger("0"))
    assert.equal(666,  is.toInteger("666"))
    assert.equal(1,    is.toInteger(1.23))
    assert.equal(-42,  is.toInteger(-42))
    assert.equal(-1,   is.toInteger(-1))
    assert.equal(0,    is.toInteger(0))
    assert.equal(666,  is.toInteger(666))
  })

  it('toInt', function(){
    assert.equal(null, is.toInt(fn))
    assert.equal(null, is.toInt(new Date()))
    assert.equal(null, is.toInt(undefined))
    assert.equal(null, is.toInt(NaN))
    assert.equal(null, is.toInt(null))
    assert.equal(null, is.toInt(true))
    assert.equal(null, is.toInt(false))
    assert.equal(null, is.toInt({}))
    assert.equal(null, is.toInt([]))
    assert.equal(null, is.toInt(""))
    assert.equal(null, is.toInt("   "))
    assert.equal(null, is.toInt("asdf"))
    assert.equal(1,    is.toInt("1.23"))
    assert.equal(-42,  is.toInt("-42"))
    assert.equal(-1,   is.toInt("-1"))
    assert.equal(0,    is.toInt("0"))
    assert.equal(666,  is.toInt("666"))
    assert.equal(1,    is.toInt(1.23))
    assert.equal(-42,  is.toInt(-42))
    assert.equal(-1,   is.toInt(-1))
    assert.equal(0,    is.toInt(0))
    assert.equal(666,  is.toInt(666))
  })

  it('toNumber', function(){
    assert.equal(null, is.toNumber(fn))
    assert.equal(null, is.toNumber(new Date()))
    assert.equal(null, is.toNumber(undefined))
    assert.equal(null, is.toNumber(NaN))
    assert.equal(null, is.toNumber(null))
    assert.equal(null, is.toNumber(true))
    assert.equal(null, is.toNumber(false))
    assert.equal(null, is.toNumber({}))
    assert.equal(null, is.toNumber([]))
    assert.equal(null, is.toNumber(""))
    assert.equal(null, is.toNumber("   "))
    assert.equal(null, is.toNumber("asdf"))
    assert.equal(1.23, is.toNumber("1.23"))
    assert.equal(-42,  is.toNumber("-42"))
    assert.equal(-1,   is.toNumber("-1"))
    assert.equal(0,    is.toNumber("0"))
    assert.equal(666,  is.toNumber("666"))
    assert.equal(1.23, is.toNumber(1.23))
    assert.equal(-42,  is.toNumber(-42))
    assert.equal(-1,   is.toNumber(-1))
    assert.equal(0,    is.toNumber(0))
    assert.equal(666,  is.toNumber(666))
  })

  it('toNum', function(){
    assert.equal(null, is.toNum(fn))
    assert.equal(null, is.toNum(new Date()))
    assert.equal(null, is.toNum(undefined))
    assert.equal(null, is.toNum(NaN))
    assert.equal(null, is.toNum(null))
    assert.equal(null, is.toNum(true))
    assert.equal(null, is.toNum(false))
    assert.equal(null, is.toNum({}))
    assert.equal(null, is.toNum([]))
    assert.equal(null, is.toNum(""))
    assert.equal(null, is.toNum("   "))
    assert.equal(null, is.toNum("asdf"))
    assert.equal(1.23, is.toNum("1.23"))
    assert.equal(-42,  is.toNum("-42"))
    assert.equal(-1,   is.toNum("-1"))
    assert.equal(0,    is.toNum("0"))
    assert.equal(666,  is.toNum("666"))
    assert.equal(1.23, is.toNum(1.23))
    assert.equal(-42,  is.toNum(-42))
    assert.equal(-1,   is.toNum(-1))
    assert.equal(0,    is.toNum(0))
    assert.equal(666,  is.toNum(666))
  })

})
