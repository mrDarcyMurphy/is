var assert = require('assert')
var is = require('../lib/is')

describe('numbers', function(){

  it('integer', function(){
    var fn = function(){}
    assert.equal(false, is.integer(fn))
    assert.equal(false, is.integer(new Date))
    assert.equal(false, is.integer(undefined))
    assert.equal(false, is.integer(NaN))
    assert.equal(false, is.integer(null))
    assert.equal(false, is.integer(true))
    assert.equal(false, is.integer(false))
    assert.equal(false, is.integer({}))
    assert.equal(false, is.integer([]))
    assert.equal(false, is.integer(""))
    assert.equal(false, is.integer(" 	"))
    assert.equal(false, is.integer("asdf"))
    assert.equal(false, is.integer("1.23"))
    assert.equal(false, is.integer("-42"))
    assert.equal(false, is.integer("-42.01"))
    assert.equal(false, is.integer("-1"))
    assert.equal(false, is.integer("0"))
    assert.equal(false, is.integer("666"))
    assert.equal(false, is.integer(1.23))
    assert.equal(true,  is.integer(-42))
    assert.equal(true,  is.integer(-1))
    assert.equal(true,  is.integer(0))
    assert.equal(true,  is.integer(666))
  })

  it('int', function(){
    var fn = function(){}
    assert.equal(false, is.int(fn))
    assert.equal(false, is.int(new Date))
    assert.equal(false, is.int(undefined))
    assert.equal(false, is.int(NaN))
    assert.equal(false, is.int(null))
    assert.equal(false, is.int(true))
    assert.equal(false, is.int(false))
    assert.equal(false, is.int({}))
    assert.equal(false, is.int([]))
    assert.equal(false, is.int(""))
    assert.equal(false, is.int(" 	"))
    assert.equal(false, is.int("asdf"))
    assert.equal(false, is.int("1.23"))
    assert.equal(false, is.int("-42"))
    assert.equal(false, is.int("-42.01"))
    assert.equal(false, is.int("-1"))
    assert.equal(false, is.int("0"))
    assert.equal(false, is.int("666"))
    assert.equal(false, is.int(1.23))
    assert.equal(true,  is.int(-42))
    assert.equal(true,  is.int(-1))
    assert.equal(true,  is.int(0))
    assert.equal(true,  is.int(666))
  })

  it('aInt', function(){
    var fn = function(){}
    assert.equal(false, is.aInt(fn))
    assert.equal(false, is.aInt(new Date))
    assert.equal(false, is.aInt(undefined))
    assert.equal(false, is.aInt(NaN))
    assert.equal(false, is.aInt(null))
    assert.equal(false, is.aInt(true))
    assert.equal(false, is.aInt(false))
    assert.equal(false, is.aInt({}))
    assert.equal(false, is.aInt([]))
    assert.equal(false, is.aInt(""))
    assert.equal(false, is.aInt("    "))
    assert.equal(false, is.aInt("asdf"))
    assert.equal(false, is.aInt("1.23"))
    assert.equal(true,  is.aInt("-42"))
    assert.equal(false, is.aInt("-42.01"))
    assert.equal(true,  is.aInt("-1"))
    assert.equal(true,  is.aInt("0"))
    assert.equal(true,  is.aInt("666"))
    assert.equal(false, is.aInt(1.23))
    assert.equal(true,  is.aInt(-42))
    assert.equal(true,  is.aInt(-1))
    assert.equal(true,  is.aInt(0))
    assert.equal(true,  is.aInt(666))
  })

  it('positiveInteger', function(){
    var fn = function(){}
    assert.equal(false, is.positiveInteger(fn))
    assert.equal(false, is.positiveInteger(new Date))
    assert.equal(false, is.positiveInteger(undefined))
    assert.equal(false, is.positiveInteger(NaN))
    assert.equal(false, is.positiveInteger(null))
    assert.equal(false, is.positiveInteger(true))
    assert.equal(false, is.positiveInteger(false))
    assert.equal(false, is.positiveInteger({}))
    assert.equal(false, is.positiveInteger([]))
    assert.equal(false, is.positiveInteger(""))
    assert.equal(false, is.positiveInteger(" 	"))
    assert.equal(false, is.positiveInteger("asdf"))
    assert.equal(false, is.positiveInteger("1.23"))
    assert.equal(false, is.positiveInteger("-42"))
    assert.equal(false, is.positiveInteger("-42.01"))
    assert.equal(false, is.positiveInteger("-1"))
    assert.equal(false, is.positiveInteger("0"))
    assert.equal(false, is.positiveInteger("666"))
    assert.equal(false, is.positiveInteger(1.23))
    assert.equal(false, is.positiveInteger(-42))
    assert.equal(false, is.positiveInteger(-1))
    assert.equal(false, is.positiveInteger(0))
    assert.equal(true,  is.positiveInteger(666))
  })

  it('aPositiveInteger', function(){
    var fn = function(){}
    assert.equal(false, is.aPositiveInteger(fn))
    assert.equal(false, is.aPositiveInteger(new Date))
    assert.equal(false, is.aPositiveInteger(undefined))
    assert.equal(false, is.aPositiveInteger(NaN))
    assert.equal(false, is.aPositiveInteger(null))
    assert.equal(false, is.aPositiveInteger(true))
    assert.equal(false, is.aPositiveInteger(false))
    assert.equal(false, is.aPositiveInteger({}))
    assert.equal(false, is.aPositiveInteger([]))
    assert.equal(false, is.aPositiveInteger(""))
    assert.equal(false, is.aPositiveInteger("    "))
    assert.equal(false, is.aPositiveInteger("asdf"))
    assert.equal(false, is.aPositiveInteger("1.23"))
    assert.equal(false, is.aPositiveInteger("-42"))
    assert.equal(false, is.aPositiveInteger("-42.01"))
    assert.equal(false, is.aPositiveInteger("-1"))
    assert.equal(false, is.aPositiveInteger("0"))
    assert.equal(true,  is.aPositiveInteger("666"))
    assert.equal(false, is.aPositiveInteger(1.23))
    assert.equal(false, is.aPositiveInteger(-42))
    assert.equal(false, is.aPositiveInteger(-1))
    assert.equal(false, is.aPositiveInteger(0))
    assert.equal(true,  is.aPositiveInteger(666))
  })

  it('posInt', function(){
    var fn = function(){}
    assert.equal(false, is.posInt(fn))
    assert.equal(false, is.posInt(new Date))
    assert.equal(false, is.posInt(undefined))
    assert.equal(false, is.posInt(NaN))
    assert.equal(false, is.posInt(null))
    assert.equal(false, is.posInt(true))
    assert.equal(false, is.posInt(false))
    assert.equal(false, is.posInt({}))
    assert.equal(false, is.posInt([]))
    assert.equal(false, is.posInt(""))
    assert.equal(false, is.posInt(" 	"))
    assert.equal(false, is.posInt("asdf"))
    assert.equal(false, is.posInt("1.23"))
    assert.equal(false, is.posInt("-42"))
    assert.equal(false, is.posInt("-42.01"))
    assert.equal(false, is.posInt("-1"))
    assert.equal(false, is.posInt("0"))
    assert.equal(false, is.posInt("666"))
    assert.equal(false, is.posInt(1.23))
    assert.equal(false, is.posInt(-42))
    assert.equal(false, is.posInt(-1))
    assert.equal(false, is.posInt(0))
    assert.equal(true,  is.posInt(666))
  })

  it('posInt + arg', function(){
    var fn = function(){}
    assert.equal(false, is.posInt(fn, 2))
    assert.equal(false, is.posInt(new Date, 2))
    assert.equal(false, is.posInt(undefined, 2))
    assert.equal(false, is.posInt(NaN, 2))
    assert.equal(false, is.posInt(null, 2))
    assert.equal(false, is.posInt(true, 2))
    assert.equal(false, is.posInt(false, 2))
    assert.equal(false, is.posInt({}, 2))
    assert.equal(false, is.posInt([], 2))
    assert.equal(false, is.posInt("", 2))
    assert.equal(false, is.posInt(" 	", 2))
    assert.equal(false, is.posInt("asdf", 2))
    assert.equal(false, is.posInt("1.23", 2))
    assert.equal(false, is.posInt("-42", 2))
    assert.equal(false, is.posInt("-42.01", 2))
    assert.equal(false, is.posInt("-1", 2))
    assert.equal(false, is.posInt("0", 2))
    assert.equal(false, is.posInt("666", 2))
    assert.equal(false, is.posInt(1.23, 2))
    assert.equal(false, is.posInt(-42, 2))
    assert.equal(false, is.posInt(-1, 2))
    assert.equal(false, is.posInt(0, 2))
    assert.equal(false, is.posInt(1, 2))
    assert.equal(true,  is.posInt(666, 2))

    assert.equal(false, is.posInt(fn, -2))
    assert.equal(false, is.posInt(new Date, -2))
    assert.equal(false, is.posInt(undefined, -2))
    assert.equal(false, is.posInt(NaN, -2))
    assert.equal(false, is.posInt(null, -2))
    assert.equal(false, is.posInt(true, -2))
    assert.equal(false, is.posInt(false, -2))
    assert.equal(false, is.posInt({}, -2))
    assert.equal(false, is.posInt([], -2))
    assert.equal(false, is.posInt("", -2))
    assert.equal(false, is.posInt(" 	", -2))
    assert.equal(false, is.posInt("asdf", -2))
    assert.equal(false, is.posInt("1.23", -2))
    assert.equal(false, is.posInt("-42", -2))
    assert.equal(false, is.posInt("-42.01", -2))
    assert.equal(false, is.posInt("-1", -2))
    assert.equal(false, is.posInt("0", -2))
    assert.equal(false, is.posInt("666", -2))
    assert.equal(false, is.posInt(1.23, -2))
    assert.equal(false, is.posInt(-42, -2))
    assert.equal(false, is.posInt(-1, -2))
    assert.equal(false, is.posInt(0, -2))
    assert.equal(true,  is.posInt(1, -2))
    assert.equal(true,  is.posInt(666, -2))
  })

  it('negativeInteger', function(){
    var fn = function(){}
    assert.equal(false, is.negativeInteger(fn))
    assert.equal(false, is.negativeInteger(new Date))
    assert.equal(false, is.negativeInteger(undefined))
    assert.equal(false, is.negativeInteger(NaN))
    assert.equal(false, is.negativeInteger(null))
    assert.equal(false, is.negativeInteger(true))
    assert.equal(false, is.negativeInteger(false))
    assert.equal(false, is.negativeInteger({}))
    assert.equal(false, is.negativeInteger([]))
    assert.equal(false, is.negativeInteger(""))
    assert.equal(false, is.negativeInteger(" 	"))
    assert.equal(false, is.negativeInteger("asdf"))
    assert.equal(false, is.negativeInteger("1.23"))
    assert.equal(false, is.negativeInteger("-42"))
    assert.equal(false, is.negativeInteger("-42.01"))
    assert.equal(false, is.negativeInteger("-1"))
    assert.equal(false, is.negativeInteger("0"))
    assert.equal(false, is.negativeInteger("666"))
    assert.equal(false, is.negativeInteger(1.23))
    assert.equal(true,  is.negativeInteger(-42))
    assert.equal(true,  is.negativeInteger(-1))
    assert.equal(false, is.negativeInteger(0))
    assert.equal(false, is.negativeInteger(666))
  })

  it('aNegativeInteger', function(){
    var fn = function(){}
    assert.equal(false, is.aNegativeInteger(fn))
    assert.equal(false, is.aNegativeInteger(new Date))
    assert.equal(false, is.aNegativeInteger(undefined))
    assert.equal(false, is.aNegativeInteger(NaN))
    assert.equal(false, is.aNegativeInteger(null))
    assert.equal(false, is.aNegativeInteger(true))
    assert.equal(false, is.aNegativeInteger(false))
    assert.equal(false, is.aNegativeInteger({}))
    assert.equal(false, is.aNegativeInteger([]))
    assert.equal(false, is.aNegativeInteger(""))
    assert.equal(false, is.aNegativeInteger("    "))
    assert.equal(false, is.aNegativeInteger("asdf"))
    assert.equal(false, is.aNegativeInteger("1.23"))
    assert.equal(true,  is.aNegativeInteger("-42"))
    assert.equal(false, is.aNegativeInteger("-42.01"))
    assert.equal(true,  is.aNegativeInteger("-1"))
    assert.equal(false, is.aNegativeInteger("0"))
    assert.equal(false, is.aNegativeInteger("666"))
    assert.equal(false, is.aNegativeInteger(1.23))
    assert.equal(true,  is.aNegativeInteger(-42))
    assert.equal(true,  is.aNegativeInteger(-1))
    assert.equal(false, is.aNegativeInteger(0))
    assert.equal(false, is.aNegativeInteger(666))
  })

  it('negInt', function(){
    var fn = function(){}
    assert.equal(false, is.negInt(fn))
    assert.equal(false, is.negInt(new Date))
    assert.equal(false, is.negInt(undefined))
    assert.equal(false, is.negInt(NaN))
    assert.equal(false, is.negInt(null))
    assert.equal(false, is.negInt(true))
    assert.equal(false, is.negInt(false))
    assert.equal(false, is.negInt({}))
    assert.equal(false, is.negInt([]))
    assert.equal(false, is.negInt(""))
    assert.equal(false, is.negInt(" 	"))
    assert.equal(false, is.negInt("asdf"))
    assert.equal(false, is.negInt("1.23"))
    assert.equal(false, is.negInt("-42"))
    assert.equal(false, is.negInt("-42.01"))
    assert.equal(false, is.negInt("-1"))
    assert.equal(false, is.negInt("0"))
    assert.equal(false, is.negInt("666"))
    assert.equal(false, is.negInt(1.23))
    assert.equal(true,  is.negInt(-42))
    assert.equal(true,  is.negInt(-1))
    assert.equal(false, is.negInt(0))
    assert.equal(false, is.negInt(666))
  })

  it('posInt + arg', function(){
    var fn = function(){}
    assert.equal(false, is.negInt(fn, 2))
    assert.equal(false, is.negInt(new Date, 2))
    assert.equal(false, is.negInt(undefined, 2))
    assert.equal(false, is.negInt(NaN, 2))
    assert.equal(false, is.negInt(null, 2))
    assert.equal(false, is.negInt(true, 2))
    assert.equal(false, is.negInt(false, 2))
    assert.equal(false, is.negInt({}, 2))
    assert.equal(false, is.negInt([], 2))
    assert.equal(false, is.negInt("", 2))
    assert.equal(false, is.negInt("   ", 2))
    assert.equal(false, is.negInt("asdf", 2))
    assert.equal(false, is.negInt("1.23", 2))
    assert.equal(false, is.negInt("-42", 2))
    assert.equal(false, is.negInt("-42.01", 2))
    assert.equal(false, is.negInt("-1", 2))
    assert.equal(false, is.negInt("0", 2))
    assert.equal(false, is.negInt("666", 2))
    assert.equal(false, is.negInt(1.23, 2))
    assert.equal(true,  is.negInt(-42, 2))
    assert.equal(true,  is.negInt(-1, 2))
    assert.equal(false, is.negInt(0, 2))
    assert.equal(false, is.negInt(1, 2))
    assert.equal(false, is.negInt(666, 2))

    assert.equal(false, is.negInt(fn, -2))
    assert.equal(false, is.negInt(new Date, -2))
    assert.equal(false, is.negInt(undefined, -2))
    assert.equal(false, is.negInt(NaN, -2))
    assert.equal(false, is.negInt(null, -2))
    assert.equal(false, is.negInt(true, -2))
    assert.equal(false, is.negInt(false, -2))
    assert.equal(false, is.negInt({}, -2))
    assert.equal(false, is.negInt([], -2))
    assert.equal(false, is.negInt("", -2))
    assert.equal(false, is.negInt("   ", -2))
    assert.equal(false, is.negInt("asdf", -2))
    assert.equal(false, is.negInt("1.23", -2))
    assert.equal(false, is.negInt("-42", -2))
    assert.equal(false, is.negInt("-42.01", -2))
    assert.equal(false, is.negInt("-1", -2))
    assert.equal(false, is.negInt("0", -2))
    assert.equal(false, is.negInt("666", -2))
    assert.equal(false, is.negInt(1.23, -2))
    assert.equal(true,  is.negInt(-42, -2))
    assert.equal(false, is.negInt(-1, -2))
    assert.equal(false, is.negInt(0, -2))
    assert.equal(false, is.negInt(1, -2))
    assert.equal(false, is.negInt(666, -2))
  })

  it('zero', function(){
    var fn = function(){}
    assert.equal(false, is.zero(fn))
    assert.equal(false, is.zero(new Date))
    assert.equal(false, is.zero(undefined))
    assert.equal(false, is.zero(NaN))
    assert.equal(false, is.zero(null))
    assert.equal(false, is.zero(true))
    assert.equal(false, is.zero(false))
    assert.equal(false, is.zero({}))
    assert.equal(false, is.zero([]))
    assert.equal(false, is.zero(""))
    assert.equal(false, is.zero(" 	"))
    assert.equal(false, is.zero("asdf"))
    assert.equal(false, is.zero("1.23"))
    assert.equal(false, is.zero("-42"))
    assert.equal(false, is.zero("-42.01"))
    assert.equal(false, is.zero("-1"))
    assert.equal(false, is.zero("0"))
    assert.equal(false, is.zero("666"))
    assert.equal(false, is.zero(1.23))
    assert.equal(false, is.zero(-42))
    assert.equal(false, is.zero(-1))
    assert.equal(true,  is.zero(0))
    assert.equal(false, is.zero(666))
  })

  it('aZero', function(){
    var fn = function(){}
    assert.equal(false, is.aZero(fn))
    assert.equal(false, is.aZero(new Date))
    assert.equal(false, is.aZero(undefined))
    assert.equal(false, is.aZero(NaN))
    assert.equal(false, is.aZero(null))
    assert.equal(false, is.aZero(true))
    assert.equal(false, is.aZero(false))
    assert.equal(false, is.aZero({}))
    assert.equal(false, is.aZero([]))
    assert.equal(false, is.aZero(""))
    assert.equal(false, is.aZero("   "))
    assert.equal(false, is.aZero("asdf"))
    assert.equal(false, is.aZero("1.23"))
    assert.equal(false, is.aZero("-42"))
    assert.equal(false, is.aZero("-42.01"))
    assert.equal(false, is.aZero("-1"))
    assert.equal(true,  is.aZero("0"))
    assert.equal(false, is.aZero("666"))
    assert.equal(false, is.aZero(1.23))
    assert.equal(false, is.aZero(-42))
    assert.equal(false, is.aZero(-1))
    assert.equal(true,  is.aZero(0))
    assert.equal(false, is.aZero(666))
  })

})
