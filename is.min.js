/*! is-it - v0.0.10 - 2013-03-10 */!function(t,n){"undefined"!=typeof module?module.exports=n():"function"==typeof define&&"object"==typeof define.amd?define(n):this[t]=n()}("is",function(){var t={VERSION:"0.0.10",toNumber:function(t){var n=parseFloat(t);return isNaN(n)?null:n},toInteger:function(t){var n=parseInt(t,10);return isNaN(n)?null:n},aZero:function(t){return this.zero(this.toNum(t))},aInt:function(t){return this.int(this.toNum(t))},aPositiveInteger:function(t,n){return this.posInt(this.toNum(t),n)},aNegativeInteger:function(t,n){return this.negInt(this.toNum(t),n)},integer:function(t){return"number"==typeof t&&0===t%1},positiveInteger:function(t,n){return n=this.int(n)&&n>0?n:0,this.int(t)&&t>n},negativeInteger:function(t,n){return n=this.int(n)&&0>n?n:0,this.int(t)&&n>t},zero:function(t){return 0===t},string:function(t){return"string"==typeof t},emptyString:function(t){return this.string(t)?""===t.replace(/\s/g,""):!1}};t.toInt=t.toInteger,t.toNum=t.toNumber,t.aPosInt=t.aPositiveInteger,t.aNegInt=t.aNegativeInteger,t.int=t.integer,t.posInt=t.positiveInteger,t.negInt=t.negativeInteger,t.str=t.string,t.emtStr=t.emptyString;var n=t.not={};for(method in t)t.hasOwnProperty(method)&&"function"==typeof t[method]&&0!==method.indexOf("to")&&(n[method]=function(n){return function(){return!t[n].apply(t,arguments)}}(method));return t});